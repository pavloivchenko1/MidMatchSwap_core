/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { CustomerQueue } from "../CustomerQueue";

export class CustomerQueue__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<CustomerQueue> {
    return super.deploy(overrides || {}) as Promise<CustomerQueue>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CustomerQueue {
    return super.attach(address) as CustomerQueue;
  }
  connect(signer: Signer): CustomerQueue__factory {
    return super.connect(signer) as CustomerQueue__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CustomerQueue {
    return new Contract(address, _abi, signerOrProvider) as CustomerQueue;
  }
}

const _abi = [
  {
    inputs: [],
    name: "deleteFirst",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "deleteFromQueue",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "prev",
            type: "address",
          },
          {
            internalType: "address",
            name: "next",
            type: "address",
          },
        ],
        internalType: "struct Customer.Info",
        name: "data",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dequeue",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "prev",
            type: "address",
          },
          {
            internalType: "address",
            name: "next",
            type: "address",
          },
        ],
        internalType: "struct Customer.Info",
        name: "data",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "nextAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "prev",
            type: "address",
          },
          {
            internalType: "address",
            name: "next",
            type: "address",
          },
        ],
        internalType: "struct Customer.Info",
        name: "data",
        type: "tuple",
      },
    ],
    name: "enqueue",
    outputs: [
      {
        internalType: "address",
        name: "queuePosition",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getFirst",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "prev",
            type: "address",
          },
          {
            internalType: "address",
            name: "next",
            type: "address",
          },
        ],
        internalType: "struct Customer.Info",
        name: "data",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "index",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numberOfPeopleInQueue",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "updateBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611776806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063957908d11161005b578063957908d1146100db578063b6a6bf6d146100fa578063b701a4f614610118578063e0b1cccb146101485761007d565b8063135d32ea146100825780631e223143146100b25780635c0d6b18146100d1575b600080fd5b61009c60048036038101906100979190611383565b610164565b6040516100a99190611513565b60405180910390f35b6100ba61048b565b6040516100c892919061152e565b60405180910390f35b6100d9610721565b005b6100e3610a14565b6040516100f192919061152e565b60405180910390f35b610102610dfe565b60405161010f9190611557565b60405180910390f35b610132600480360381019061012d91906113e8565b610e13565b60405161013f91906114d8565b60405180910390f35b610162600480360381019061015d91906113ac565b611200565b005b61016c61124a565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090508060800151600080836060015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600090556003820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050919050565b61049361124a565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610526576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051d906114f3565b60405180910390fd5b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509150915091509091565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561077d57600080fd5b6000806000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600090556003820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055505080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002601481819054906101000a900462ffffff16809291906109f4906115f3565b91906101000a81548162ffffff021916908362ffffff1602179055505050565b610a1c61124a565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610a7957600080fd5b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509150600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600090556003820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550508160800151600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002601481819054906101000a900462ffffff1680929190610db5906115f3565b91906101000a81548162ffffff021916908362ffffff1602179055505081600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915091509091565b600260149054906101000a900462ffffff1681565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610ef25733600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611030565b33600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16826060019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6002601481819054906101000a900462ffffff16809291906110519061164e565b91906101000a81548162ffffff021916908362ffffff16021790555050816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055505050565b6040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6000813590506112e081611712565b92915050565b600060a082840312156112f857600080fd5b61130260a0611572565b90506000611312848285016112d1565b6000830152506020611326848285016112d1565b602083015250604061133a8482850161136e565b604083015250606061134e848285016112d1565b6060830152506080611362848285016112d1565b60808301525092915050565b60008135905061137d81611729565b92915050565b60006020828403121561139557600080fd5b60006113a3848285016112d1565b91505092915050565b600080604083850312156113bf57600080fd5b60006113cd858286016112d1565b92505060206113de8582860161136e565b9150509250929050565b600060a082840312156113fa57600080fd5b6000611408848285016112e6565b91505092915050565b61141a816115a8565b82525050565b611429816115a8565b82525050565b600061143c600b83611597565b9150611447826116e9565b602082019050919050565b60a0820160008201516114686000850182611411565b50602082015161147b6020850182611411565b50604082015161148e60408501826114c9565b5060608201516114a16060850182611411565b5060808201516114b46080850182611411565b50505050565b6114c3816115da565b82525050565b6114d2816115e9565b82525050565b60006020820190506114ed6000830184611420565b92915050565b6000602082019050818103600083015261150c8161142f565b9050919050565b600060a0820190506115286000830184611452565b92915050565b600060c0820190506115436000830185611452565b61155060a0830184611420565b9392505050565b600060208201905061156c60008301846114ba565b92915050565b600061157c61158d565b9050611588828261161d565b919050565b6000604051905090565b600082825260208201905092915050565b60006115b3826115ba565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6000819050919050565b60006115fe826115da565b915060008214156116125761161161167a565b5b600182039050919050565b611626826116d8565b810181811067ffffffffffffffff82111715611645576116446116a9565b5b80604052505050565b6000611659826115da565b915062ffffff82141561166f5761166e61167a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f454d505459205155455545000000000000000000000000000000000000000000600082015250565b61171b816115a8565b811461172657600080fd5b50565b611732816115e9565b811461173d57600080fd5b5056fea264697066735822122051b8b2f1c82684db9cd32789c95c483683f99679081e7666019959f5db9eb24a64736f6c63430008010033";
